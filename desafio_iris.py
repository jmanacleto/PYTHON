# -*- coding: utf-8 -*-
"""desafio_iris

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f3NOoANR42KkdCEChMM91QcHsx5LAKLm
"""

# importando as bibliotecas necessárias para resolver o problema
import sklearn as sk
import numpy as np
import pandas as pd

# importantado os recursos de informações que serão utilizaos
from sklearn import datasets

# carregando as informações que serão utilizadas. A varíavel abaixo armazena as informações disponibilizadas pela biblioteca. Neste caso, informações sobre a flor íris.
iris = datasets.load_iris()
iris

# a linha abaixo possibilita vermos os dados que temos disponíveis
iris.data

# o target são as classificações possíveis da íris. No caso temos 0 = setosa, 1 = versicolor e 2 = virginica. red=setosa,green=versicolor,blue=virginica
iris.target

# o feature_names traz os nomes das colunas relativas as informações contidas no iris.data
iris.feature_names

# a target names, traz as informações de cada classificação da iris. Como dito mais acima, 0 = setosa, 1 = versicolor e 2 = virginica. red=setosa,green=versicolor,blue=virginica
iris.target_names

"""## Transformar os dados que estão na varíavel iris num dataFrame

"""

print(type(iris.target_names))
print(type(iris.feature_names))
print(type(iris.data))
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
print(df.head())

df2 = pd.DataFrame(data=iris.target)
print(df2.head())

"""##Juntar os dataframes"""

df = pd.concat([df,df2],axis=1)
df

"""##Renomear as colunas"""

df = df.rename(columns={0: 'classification'})
df

"""##Selecionar colunas específicas por índices"""

x = df.iloc[1:2, 0:3]
x

"""##Filtrar registros (linhas)




"""

df[df['petal length (cm)'] == 1.4]
#df.query('`petal length (cm)` > 1.4 & classification == 0')
#df.query('`sepal length (cm)` == 5.1 & `petal width (cm)` == 0.2')
#df.query('`sepal length (cm)` == 5.1 or `petal width (cm)` == 0.2')

"""##Exclusão de registros


"""

#df= df.drop(df.index[[0,2,4,6]])
#df
df.drop(columns=['petal length (cm)'],inplace=True)
df

"""##Agrupamento de colunas



"""

from collections import Counter
print(Counter(df.classification))

df['classification']=df['classification'].replace({0:'setosa', 1: 'versicolor', 2: 'virginica'})
df

"""##Salvando e exportando o dataframe tratado"""

df.to_csv('df.csv', sep=';', encoding='utf-8', index = False)